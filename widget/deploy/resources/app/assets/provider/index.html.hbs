<!doctype html>

<html xmlns:fb="http://ogp.me/ns/fb#">
<head>
  <meta charset="utf-8">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=980" />
  <title>Winbits</title>
  {{#if remoteDebug}}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/easyXDM/2.4.18.25/easyXDM.debug.js"></script>
  {{else}}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/easyXDM/2.4.18.25/easyXDM.js"></script>
  {{/if}}
  <script type="text/javascript">
    easyXDM.DomHelper.requiresJSON("https://cdnjs.cloudflare.com/ajax/libs/json2/20121008/json2.js");
  </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.js"></script>

  <script type="text/javascript">
    (function(){
      var Winbits = { apiTokenKey: '_wb_api_token', cartTokenKey: '_wb_cart_token' };

      Winbits.storeKey = function (key, value) {
        return localStorage[key] = value;
      };

      Winbits.retrieveKey = function (key) {
        return localStorage[key];
      };

      Winbits.deleteKey = function (key) {
        return localStorage.removeItem(key);
      };

      var rpc = new easyXDM.Rpc({},
        {
            local: {
              request: function(url, options, success, error){
                if (options && options.context) {
                  console.log('In RPC mode is not secure to use callbackas with context!');
                  delete options.context;
                }
                var config = { type: 'GET' };
                $.extend(config, options);
                console.log('Ajax Request -> ' + url);
                $.ajax(url, config).done(function() {
                    if ($.isFunction(success)) {
                      success.apply(this, arguments);
                    }
                  }).fail(function() {
                    if ($.isFunction(error)) {
                      error.apply(this, arguments);
                    }
                  });
              },
              getTokens: function() {
                var tokens = {};
                var apiToken = Winbits.retrieveKey(Winbits.apiTokenKey);
                if (apiToken) {
                  tokens.apiToken = apiToken;
                }
                var vcartToken = Winbits.retrieveKey(Winbits.cartTokenKey);
                if (!vcartToken) {
                  vcartToken = '[]';
                  Winbits.storeKey(Winbits.cartTokenKey, vcartToken);
                }
                tokens.vcartToken = vcartToken;
                console.log(['W: The tokens', tokens]);

               return tokens;

              },
              saveApiToken: function(apiToken) {
                console.log(['API Token from vertical', apiToken]);
                Winbits.storeKey(Winbits.apiTokenKey, apiToken);
              },
              deleteApiToken: function() {
                Winbits.deleteKey(Winbits.apiTokenKey);
              },
              storeVirtualCart: function(vCart) {
                Winbits.storeKey(Winbits.cartTokenKey, vCart);
              },
              logout: function(facebookLogout) {
                console.log('Winbits: Logging out...');
                Winbits.deleteKey(Winbits.apiTokenKey);
                Winbits.storeKey(Winbits.cartTokenKey, '[]');
                console.log('Wee do not log out facebook anymore!');
//                if (facebookLogout) {
//                  console.log('Winbits: Facebook logging out...');
//                  FB.logout(function(response) {
//                    console.log(['Facebook logout', response]);
//                  });
//                }
              },
              facebookStatus: function(success) {
                console.log('About to call FB.getLoginStatus.');
                FB.getLoginStatus(function(response) {
                 console.log(['FB.getLoginStatus', response]);
                 success(response);
                }, true);
              },
              facebookMe: function(success) {
                console.log('Winbits: Requesting me profile...');
                FB.api('/me', function(response){
                  console.log(['Facebook me response', response]);
                  success(response);
                });
              },
              saveUtms: function(utmParams, successFn) {
                console.log(["UTMS provider", utmParams])
                Winbits.storeKey('_wb_utm_params', JSON.stringify(utmParams))
              },
              getUtms: function(successFn, errorFn) {
                console.log(["get UTMS"])
                return {
                    'utm_params': Winbits.retrieveKey('_wb_utm_params')
                };
              }
            },
            remote: {
              request:{},
              getTokens:{},
              saveApiToken:{},
              storeVirtualCart:{},
              logout:{},
              facebookStatus:{} ,
              facebookMe:{},
              saveUtms: {},
              getUtms: {}
            }
          });

      window.fbAsyncInit = function () {
        FB.init({appId: '{{facebookClientId}}', status: true, cookie: true, xfbml: true, oauth  : true });
      };

      var e = document.createElement('script');
      e.async = true;
      e.src = 'https://connect.facebook.net/en_US/all.js';
      (document.getElementsByTagName('head')[0] || document.documentElement).appendChild(e);
    })();
  </script>
</head>
<body style="margin: 0px;background: none repeat scroll 0 0 #454545;">
<div id="fb-root" style="text-align: center;">
</div>
</body>
</html>
