(function(){
  window.Winbits = {env: {}};
  Winbits.env.baseUrl = "{{baseUrl}};
  Winbits.env.providerUrl = "{{providerUrl}};

  var head= document.getElementsByTagName('head')[0];
  var appendTagTo = function(parentTag, tagName, tagAttributes) {
    var tag= document.createElement(tagName), i, tagAttr;
    for(i = 0; i < tagAttributes.length; i++) {
      tagAttr = tagAttributes[i];
      tag.setAttribute(tagAttr.name, tagAttr.value);
    }
    parentTag.appendChild(tag);
  };

  appendTagTo(head, 'link', [{name: 'rel', value: 'stylesheet'}, {name: 'type', value: 'text/css'},
      {name: 'href', value: Winbits.env.baseUrl + "/stylesheets/app.css"}]);
  appendTagTo(head, 'script', [{name: 'type', value: 'text/javascript'},
      {name: 'src', value: Winbits.env.baseUrl + "/javascripts/vendor.js"}]);
  appendTagTo(head, 'script', [{name: 'type', value: 'text/javascript'},
      {name: 'src', value: Winbits.env.baseUrl + "/javascripts/app.js"}]);

  JavaScript.load('{{baseUrl}}/javascripts/vendor.js', function() {
    window.Backbone.$ = Winbits.$;
    JavaScript.load('{{baseUrl}}/javascripts/app.js', function() {
      // TODO: No esperar a que se cargue todo el DOM para renderizar el widget. Esperar a que se rederize el container del widget.
      Winbits.$(document).ready(function($) {
         require('initialize');
      });
    });
  });

if (!Array.prototype.reduce)
{
Array.prototype.reduce = function(fun /*, initial*/)
{
var len = this.length;
if (typeof fun != "function")
throw new TypeError();

// no value to return if no initial value and an empty array
if (len == 0 && arguments.length == 1)
throw new TypeError();

var i = 0;
if (arguments.length >= 2)
{
var rv = arguments[1];
}
else
{
do
{
if (i in this)
{
rv = this[i++];
break;
}

// if array contains no values, no initial value to return
if (++i >= len)
throw new TypeError();
}
while (true);
}

for (; i < len; i++)
{
if (i in this)
rv = fun.call(null, rv, this[i], i, this);
}

return rv;
};
}
})();
