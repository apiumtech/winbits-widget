(function(){
  window.Winbits = {};
  Winbits.env = { baseUrl: "{{baseUrl}}", providerUrl: "{{providerUrl}}" };

  Winbits._callbacks = (function() {
    var eventCallbacks;
    eventCallbacks = {};
    return {
      trigger: function(event) {
        var callback, callbacks, _i, _len, _results;
        callbacks = eventCallbacks[event];
        if (callbacks) {
          for (_i = 0, _len = callbacks.length; _i < _len; _i++) {
            callback = callbacks[_i];
            callback.call(callback._ctx || {});
          }
        }
      },
      add: function(event, callback, context) {
        var callbacks;
        callbacks = eventCallbacks[event] || [];
        if (typeof callback === 'function') {
          callback._ctx = context;
          callbacks.push(callback);
        }
        eventCallbacks[event] = callbacks;
      }
    };
  })();

  Winbits._triggered = (function() {
    var eventsTriggered;
    eventsTriggered = {};
    return {
      get: function(event) {
        return eventsTriggered[event];
      },
      set: function(event) {
        var eventTriggered;
        eventTriggered = eventsTriggered[event] != null;
        if (eventTriggered == null) {
          eventsTriggered[event] = true;
        }
      }
    };
  })();

  Winbits.on = function(event, callback, context) {
    if (Winbits._triggered.get(event)) {
      callback.call(context || {});
    } else {
      Winbits._callbacks.add(event, callback, context);
    }
  };

  Winbits.trigger = function(event) {
    Winbits._callbacks.trigger(event);
  };

  Winbits.loadScript = function(src, callback) {
    var script = document.createElement('script');
    var loaded;
    script.setAttribute("type","text/javascript");
    script.setAttribute('src', src);
    if (callback) {
      if (script.readyState) {
        script.onreadystatechange = function () { // For old versions of IE
          if (this.readyState == 'complete' || this.readyState == 'loaded') {
            callback();
          }
        };
      } else { // Other browsers
        script.onload = callback;
      }
    }
    (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(script);
  };

  var head= document.getElementsByTagName('head')[0];
  var appendTagTo = function(parentTag, tagName, tagAttributes) {
    var tag= document.createElement(tagName), i, tagAttr;
    for(i = 0; i < tagAttributes.length; i++) {
      tagAttr = tagAttributes[i];
      tag.setAttribute(tagAttr.name, tagAttr.value);
    }
    parentTag.appendChild(tag);
  };

  appendTagTo(head, 'link', [{name: 'rel', value: 'stylesheet'}, {name: 'type', value: 'text/css'},
      {name: 'href', value: Winbits.env.baseUrl + "/stylesheets/winbits/app.css"}]);
  Winbits.loadScript(Winbits.env.baseUrl + "/javascripts/vendor.js", function() {
    Winbits.loadScript(Winbits.env.baseUrl + "/javascripts/app.js", function() {
      require('initialize');
      Winbits.trigger('initialized');
    });
  });
})();
